f <- 1:10
f[2,5]
f[c(2,5)]
1 + 2
2 - 3
3 * 4
4 / 5
456 * 567
a <- 3
a
a <<- 3
my_vector <- c(1, 2, 3)
2*my_vector
other_vector <- c(2, 3, 4)
my_vector*other_vector
new_vector <- c(2, 3, 4, 5)
my_vector*new_vector
my_vector
new_vector
my_vector*new_vector
c(0, 0, 0)*c(1, 2, 3, 4)
c(0, 0, 0)/c(1, 2, 3, 4)
c(2, 0, 0)/c(1, 2, 3, 4)
c(2, 0, 0)*c(1, 2, 3, 4)
my_sequence <- 1:10
my_sequence
my_sequence/10
f <- 1:10*10
f
f[2] <- 2000
f
f[2]
f[15] <- 3
f
f[11] <- 1/0
f
f[3] <- 'z'
f
f/10
f[2]
f[c(2,5)]
my_data <- data.frame(
animal <- c("cat", "dog", "peacock"),
legs = c(4, 4, 2)
)
my_data
my_data <- data.frame(
animal = c("cat", "dog", "peacock"),
legs = c(4, 4, 2)
)
my_data
a <- 1:100/100
mean(a)
max(a)
a[102] <- 3
mean(a)
?mean
mean(a, na.rm=TRUE)
mean(a, na.rm=T)
mean(a, na.rm=true)
my_function <- function(x){a[x] <- 3}
a
a <- 1:10
a
my_function(1)
a
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
3
source('~/.active-rstudio-document', echo=TRUE)
b
a
source('~/.active-rstudio-document', echo=TRUE)
a
inverse <- function(number){
# return the inverse of a number
number_inverse <- 1/number
return(number_inverse)
}
inverse(3)
inverse('z')
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("A", "B"),
empirical = TRUE)
library(faux)
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("A", "B"),
empirical = TRUE)
faux_data
mean(faux_data$A)
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("A", "B"),
empirical = TRUE)
mean(faux_data$A)
set.seed(1234)
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("A", "B"),
empirical = TRUE)
mean(faux_data$A)
set.seed(1234)
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("A", "B"),
empirical = TRUE)
mean(faux_data$A)
set.seed(123)
a <- rnorm(100, 5, 3) %>%
mean %>%
round(2)
a
set.seed(123)
rnorm(100, 5, 3) %>%
mean %>%
round(2) -> a
a
+
3 > 4
a <- c(1, 4, 8)
5 %in% a
sci_denial <- read_csv("data/science_denial.csv")
demographics <- read_csv("data/demographics.csv")
library(tidyverse)
library(plotly)
library(knitr)
sci_denial <- read_csv("data/science_denial.csv")
demographics <- read_csv("data/demographics.csv")
View(sci_denial)
distinct(demographics$gender)
demographics
demographics %>% distinct(gender)
names(sci_denial)
demographics %>% select(age)
demographics %>% select(-age)
demographics %>% select(-age, participant)
demographics %>% dplyr::select(-age, participant)
names(sci_denial)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4)
weight_data <- read_csv("data/weight.csv") %>%
filter(age>20) %>%
mutate(gender = ifelse(male==1, "male", "female"))
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 13)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18,
siz= 20)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18,
size = 20)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18,
size = 4)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4,
position = position_jitter(0.1)) +
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18,
size = 4)
ggplot(weight_data,
aes(x=gender, y=weight_kg)) +
geom_point(alpha=0.4,
# position = position_jitter(0.1))
+
stat_summary(fun = "mean",
color = "red",
geom = "point",
shape = 18,
size = 4)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg)) +
geom_point(alpha=0.4)
marginal_plot <- ggMarginal(main_plot)
library(ggExtra)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg)) +
geom_point(alpha=0.4)
marginal_plot <- ggMarginal(main_plot)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg)) +
geom_point(alpha=0.4)
ggMarginal(main_plot)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg,
color=gender)) +
geom_point(alpha=0.4)
ggMarginal(main_plot)
?ggMarginal
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg,
color=gender)) +
geom_point(alpha=0.4)
ggMarginal(main_plot, groupColor=T)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg,
color=gender)) +
geom_point(alpha=0.4)
ggMarginal(main_plot, groupColour=T)
main_plot <- ggplot(weight_data,
aes(x=height_cm,
y=weight_kg,
color=gender)) +
geom_point(alpha=0.4) +
theme(legend.position = "bottom")
ggMarginal(main_plot, groupColour = TRUE)
ggplot(aes(x=height_cm,y=weight,color=gender)) +
stat_smooth()
ggplot(weight_data,
aes(x=height_cm,y=weight,color=gender)) +
stat_smooth()
ggplot(weight_data,
aes(x=height_cm,y=weight_kg,color=gender)) +
stat_smooth()
ggplot(weight_data,
aes(x=height_cm,y=weight_kg)) +
stat_smooth()
ggplot(weight_data,
aes(x=height_cm,y=weight_kg)) +
geom_point(alpha=0.4)+
stat_smooth()
ggplot(weight_data,
aes(x=height_cm,y=weight_kg)) +
geom_point(alpha=0.4)+
stat_smooth(method=lm)
?geom_violin
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question"))
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question")) %>% group_by(scale) %>% summarise(score=mean(response))
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question")) %>% group_by(participant, scale) %>% summarise(score=mean(response))
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question")) %>% group_by(participant, scale) %>% summarise(score=mean(response))
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question")) %>% group_by(participant, scale) %>% summarise(score=mean(response)) %>% spread
?spread
sci_denial %>%
gather(item, response, -participant) %>%
separate(item, c("scale", "question")) %>% group_by(participant, scale) %>% summarise(score=mean(response)) %>% spread(scale, score)
demographics %>%
mutate(decade = floor(age/10))
demographics %>%
mutate(decade = floor(age/10)+1)
demographics %>% distinct(gender)
demographics %>%
mutate(gender = ifelse(gender %in% c("male", "female", "na"),
gender,
"nb"))
demographics %>%
mutate(gender = ifelse(gender %in% c("male", "female", "na"),
gender,
"nb")) %>%
distinct(gender)
demographics %>%
mutate(gender = ifelse(-gender %in% c("male", "female", "na"),
gender,
"nb")) %>%
distinct(gender)
demographics %>%
mutate(gender = ifelse(!gender %in% c("male", "female", "na"),
gender,
"nb")) %>%
distinct(gender)
demographics %>%
mutate(gender = ifelse(!(gender %in% c("male", "female", "na")),
gender,
"nb")) %>%
distinct(gender)
demographics$participant
sci_denial$participant
demographics$participant %in% sci_denial$participant
sum(demographics$participant %in% sci_denial$participant)
beads <- read_csv("data/beads.csv")
head(beads)
beads %>%
mutate(previous_bead = lag(bead),
same = ifelse(bead==previous_bead, T, F))
beads %>%
mutate(previous_bead = lag(bead),
same = ifelse(bead==previous_bead, T, F)) -> temp
View(temp)
beads %>%
mutate(previous_bead = lag(bead),
same = ifelse(bead==previous_bead, "same", 'different')) -> temp
beads %>% group_by(participant) %>%
mutate(previous_bead = lag(bead),
same = ifelse(bead==previous_bead, "same", 'different')) -> temp
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm)
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 3),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm) + theme(axis.text.x=element_blank())
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(2, 2),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm) + theme(axis.text.x=element_blank())
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(0, 0),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm) + theme(axis.text.x=element_blank())
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(1, 1),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm) + theme(axis.text.x=element_blank())
faux_data <- rnorm_multi(n = 100,
mu = c(0, 0),
sd = c(3, 2),
r = c(0.5),
varnames = c("outcome", "predictor"),
empirical = TRUE)
faux_data %>%
lm(outcome~predictor,data=.) %>%
summary
ggplot(faux_data,
aes(x=predictor, y=outcome)) +
geom_point() +
stat_smooth(method=lm) + theme(axis.text.x=element_blank())
3.5044/0.1666
library(tidyverse)
library(plotly)
library(knitr)
library(faux)
theme_set(theme_bw())
weight_Data
weight_data
weight_data %>% group__by(gender) %>% summarise(m=mean(age))
weight_data %>% group_by(gender) %>% summarise(m=mean(age))
weight_data %>% group_by(gender) %>% summarise(m=mean(weight_kg))
48.9-41.8
iris %>% distinct(Species)
speeies_order <- c("versicolor", "setosa", "virginica")
iris %>%
mutate(Species = factor(Species, levels=species_order)) %>% lm(Sepal.Length ~ Species,data=.) %>%
summary
species_order <- c("versicolor", "setosa", "virginica")
iris %>%
mutate(Species = factor(Species, levels=species_order)) %>% lm(Sepal.Length ~ Species,data=.) %>%
summary
fish_data_interaction <- data.frame(gender=rep(c("male", "female"), 1000),
feed = rep(c("control", "new"), each=1000)) %>%
mutate(weight = rnorm(2000, 2000, 200),
weight = ifelse(gender=="male", weight+400, weight),
weight = ifelse(feed=="new", weight+400, weight),
weight = ifelse(feed=='new' & gender=='male', weight-200, weight))
fish_data_interaction %>% group_by(gender,feed) %>% summarise(m=mean(weight))
